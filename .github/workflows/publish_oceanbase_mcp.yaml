# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: OceanBase MCP Upload PyPI

on:
  workflow_dispatch:
    inputs:
      component:
        description: 'Component to publish to PyPI'
        type: string
        default: 'oceanbase_mcp_server'

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Print inputs
        run: |
          echo "Component to publish to PyPI: ${{ github.event.inputs.component }}"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Determine component to build
        id: where
        shell: bash
        run: |
          component="${{ github.event.inputs.component }}"
          case "$component" in
            oceanbase_mcp_server)
              echo "src_dir=src/oceanbase_mcp_server" >> "$GITHUB_OUTPUT"
              ;;
            # add more packages here
            *)
              echo "Unsupported component: $component" >&2
              exit 1
              ;;
          esac
      - name: Build selected component
        run: |
          rm -rf dist
          mkdir -p dist
          python -m build "${{ steps.where.outputs.src_dir }}" -o dist
      - name: Upload dists
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/
  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1